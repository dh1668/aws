최웅철 강사

- aws 실습


- aws /docker container / kubernates / ELK 스택 / gcp
★ docker container , kubernates 는 가장 현실적인 시장에서 hot한 것임★


- 프로젝트 진행

================================
container란?
어떤 환경에서나 실행하기 위해 필요한 모든 요소를 포함하는 소프트웨어 패키지입니다. 
컨테이너는 이러한 방식으로 운영체제를 가상화하며 프라이빗 데이터 센터에서 퍼블릭 클라우드
 또는 개발자의 개인 노트북에 이르기까지 어디서나 실행됩니다.
=======================================================================
docker 란?

Docker는 애플리케이션을 신속하게 구축, 테스트 및 배포할 수 있는 소프트웨어 플랫폼입니다.
 Docker는 소프트웨어를 컨테이너라는 표준화된 유닛으로 패키징하며, 
이 컨테이너에는 라이브러리, 시스템 도구, 코드, 런타임 등 소프트웨어를 실행하는 데 필요한 모든 것이 포함되어 있습니다. 
Docker를 사용하면 환경에 구애받지 않고 애플리케이션을 신속하게 배포 및 확장할 수 있으며
 코드가 문제없이 실행될 것임을 확신할 수 있습니다.
AWS에서 Docker를 실행하면 개발자와 관리자가 어떠한 규모에서든 매우 안정적이며 저렴한 방식으로 
애플리케이션을 구축, 제공 및 실행할 수 있습니다.




Docker 작동 방식
Docker는 코드를 실행하는 표준 방식을 제공합니다. 
Docker는 컨테이너를 위한 운영 체제입니다. 
가상 머신이 서버 하드웨어를 가상화하는 방식과 비슷하게(직접 관리해야 하는 필요성 제거) 
컨테이너는 서버 운영 체제를 가상화합니다. 
Docker는 각 서버에 설치되며 컨테이너를 구축, 시작 또는 중단하는 데 
사용할 수 있는 간단한 명령을 제공합니다.

AWS Fargate, Amazon ECS, Amazon EKS, AWS Batch와 같은 AWS 서비스를 사용하면 
Docker 컨테이너를 대규모로 실행하고 관리할 수 있습니다.



Docker를 사용해야 하는 이유
Docker를 사용하면 코드를 더 빨리 전달하고, 애플리케이션 운영을 표준화하고, 
코드를 원활하게 이동하고, 리소스 사용률을 높여 비용을 절감할 수 있습니다. 
Docker를 사용하면 어디서나 안정적으로 실행할 수 있는 단일 객체를 확보하게 됩니다.
 Docker의 간단한 구문을 사용해 완벽하게 제어할 수 있습니다. 
폭넓게 도입되었다는 것은 Docker를 사용할 수 있는 
도구 및 상용 애플리케이션의 에코시스템이 강력하다는 의미입니다.




ocker를 사용하는 경우
Docker 컨테이너를 최신 애플리케이션 및 플랫폼을 생성하는 핵심 빌딩 블록으로 사용할 수 있습니다. 
Docker에서는 손쉽게 분산 마이크로서비스 아키텍처를 구축 및 실행하고, 
표준화된 지속적 통합 및 지속적 전달 파이프라인을 통해 코드를 배포하고, 
고도로 확장 가능한 데이터 처리 시스템을 구축하고,
 개발자를 위한 완전관리형 플랫폼을 생성할 수 있습니다. 
AWS와 Docker의 최근 협업으로 Docker Compose 아티팩트를
 Amazon ECS 및 AWS Fargate에 보다 쉽게 배포할 수 있게 되었습니다. 

=======================================================================
aws.com 가서 계정생성

aws계정
donghoon1702@naver.com
!Pkkdh1702

화면 캡처 실습 <aws 상관없는것> :
윈도우 키 + shift + s 

회의 id 598 907 3083
664719

-----------------------------------------------------------------
billing : 요금에 관한 사항
여러가지 사항 나옴


aws 기능 

1.billing

Cost & Usage Reports 
 -AWS Cost Explorer를 사용하여 비용 및 사용량 분석 :  	다음날 그래프 나옴

aws 시간  : 얼마쓴지 18~ 24시간뒤 측정됨

기본설정 밑의
결제 기본 설정에서
 결제 알림 관리은 얼마를 쓰겠다 하는 것들

2. IAM = Identity and Access Management(IAM) SERVICE  ( 읽을때 ) 

엑세스 관리 > 사용자

추가 => 개발자시 aws 엑세스유형 2개  , 영업부같은거면 엑세스키 빼고


<Mr.Kim> 로그인정보
Mr.kim
!bit1234


 https://333279556793.signin.aws.amazon.com/console 김대리가 로그인해야함


로그인시
오른쪽위 region 잘맞춰놔야함 <region 최대한>

<Mr.lee> 로그인정보
Mr.lee
!bit3456

루트계정 도메인
https://333279556793.signin.aws.amazon.com/console


새시크릿창
동시 로그인정보가능
---------------
ec2치면 
Mr.kim ec2 추가한것

사용자에서 
기존 정책 직접연결에
ec2치고 fullaceess 체크후 권한주기

<Mr.lee> 로그인정보
Mr.lee
!bit3456
ec2 FullAccess

<Mr.kang>
Mr.kang
!bit3456
ec2 FullAccess

<Mr.park>
Mr.kang
!bit3456
ec2 FullAccess

------------------------------------
<admin>로그인정보    << 엄연히 말하자면 이것도 IAM 계정이긴함
admin
!pkkdh1702
AdministratorAccess

AdministratorAccess 최고존엄 <관리자의최고권한>
=> 다만 Billing 의 권한만 막아놓음 <돈에관한문제다보니?>
































